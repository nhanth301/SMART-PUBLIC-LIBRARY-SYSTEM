{"paragraphs":[{"text":"# %pyspark\nimport io\nfrom flask import Flask, request, jsonify, Response\nfrom sentence_transformers import SentenceTransformer\nfrom transformers import ViTImageProcessor, ViTModel\nfrom PIL import Image\nfrom huggingface_hub import hf_hub_download\nfrom langchain_community.llms import LlamaCpp\nimport requests\nimport numpy as np\nimport json\nimport torch\nimport torch.nn as nn\nimport csv\n\nfrom langchain_community.vectorstores import Chroma\nfrom langchain.chains import RetrievalQA\nfrom langchain_community.embeddings import SentenceTransformerEmbeddings\nfrom langchain_community.embeddings import HuggingFaceBgeEmbeddings\nfrom langchain.prompts import PromptTemplate","user":"21110906","dateUpdated":"2024-12-07T11:58:55+0700","config":{"colWidth":12,"fontSize":18,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Imported io (pre-installed)\nImported flask 3.0.3 (pre-installed)\nC:\\Users\\zeppelin\\bin\\python\\.venv\\Lib\\site-packages\\transformers\\utils\\hub.py:127: FutureWarning: Using `TRANSFORMERS_CACHE` is deprecated and will be removed in v5 of Transformers. Use `HF_HOME` instead.\n  warnings.warn(\nImported sentence_transformers 3.3.1 (pre-installed)\nImported transformers 4.43.1 (pre-installed)\nImported PIL (pre-installed)\nImported huggingface_hub 0.25.2 (pre-installed)\nImported langchain_community.llms (pre-installed)\nImported requests 2.32.3 (pre-installed)\nImported numpy 1.26.4 (pre-installed)\nImported json (pre-installed)\nImported torch 2.5.1+cu121 (pre-installed)\nImported torch.nn (pre-installed)\nImported csv (pre-installed)\nImported langchain_community.vectorstores (pre-installed)\nImported langchain.chains (pre-installed)\nC:\\Users\\zeppelin\\bin\\python\\.venv\\Lib\\site-packages\\pydantic\\_internal\\_fields.py:161: UserWarning: Field \"model_name\" has conflict with protected namespace \"model_\".\n\nYou may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.\n  warnings.warn(\nImported langchain_community.embeddings (pre-installed)\nImported langchain_community.embeddings (pre-installed)\nImported langchain.prompts (pre-installed)\n"}]},"apps":[],"jobName":"paragraph_1728930924720_-650399698","id":"20241015-013524_1839813359","dateCreated":"2024-10-15T01:35:24+0700","dateStarted":"2024-12-07T11:58:54+0700","dateFinished":"2024-12-07T11:59:28+0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:464"},{"title":"Load Mô hình","text":" %pyspark\n\nmodel_path = hf_hub_download(repo_id=\"bartowski/gemma-2-9b-it-GGUF\", filename=\"gemma-2-9b-it-Q8_0-f16.gguf\")\n\nllm = LlamaCpp(\n    model_path = model_path,\n    n_ctx = 4096,\n    verbose = False,\n    streaming = True,\n    n_gpu_layers = 20,\n)\n\ndevice = 'cuda'\n\nmodel_kwargs = {'device': device, 'trust_remote_code': True}\nmodel_name=\"BAAI/bge-base-en-v1.5\"\nmodel = SentenceTransformer(\n    model_name,\n    device= device, \n    trust_remote_code=True\n)\n\n# processor = ViTImageProcessor.from_pretrained('google/vit-base-patch16-224-in21k')\n# img_extraction_model = ViTModel.from_pretrained('google/vit-base-patch16-224-in21k')\n\n","user":"21110906","dateUpdated":"2024-12-07T11:59:28+0700","config":{"colWidth":12,"fontSize":18,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1726550203391_32794956","id":"20240917-121643_1455916614","dateCreated":"2024-09-17T12:16:43+0700","dateStarted":"2024-12-07T11:59:28+0700","dateFinished":"2024-12-07T12:01:20+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:465"},{"title":"Định nghĩa hàm xử lý và khởi tạo template prompt","text":"%pyspark\n\ndef handle_data_book(suggestions):\n    # Xử lý các giá trị NaN hoặc None trong suggestion\n    for suggestion in suggestions:\n        if suggestion['summary'] == 'NaN':\n            suggestion['summary'] = 'No summary available.'\n        if suggestion.get('summary_similarity') is None:\n            suggestion['summary_similarity'] = 0.0  # Giá trị mặc định\n    \n    # Chuyển đổi danh sách suggestions thành chuỗi định dạng mong muốn\n    # suggestions_str = \"\\n\".join(\n    #     f\"{suggestion['title']}[{suggestion['id']}]\\n{suggestion['summary']}\"\n    #     for suggestion in suggestions\n    # )\n    \n    # return suggestions_str\n    \n    processed_suggestions = [\n        {\n            'id': suggestion['id'],\n            'title': suggestion['title'],\n            'summary': suggestion['summary'],\n        }\n        for suggestion in suggestions\n    ]\n    \n    return processed_suggestions\n\n\n# Tạo template cho prompt\nprompt_template = PromptTemplate(\n    input_variables=[\"user_input\", \"suggestions\"],\n    template=\"\"\"Context: \n    You are a friendly book recommender who helps users find the best books based on their needs and preferences.\n    Based on calculations, you have obtained information about the following books. If a book does not have a summary,\n    please note that information is currently unavailable, but you can still suggest that it may be suitable based on the title.\n    \n    The summary should be a concise description of the book, outlining its key topics or purpose.\n    You can introduce the books in a conversational manner, such as: \"I recommend the following books based on your request:\" or \"Here are some books you might find interesting based on your input.\"\n    **Please note that you should only provide the book recommendations without asking any further questions.**\n    \n    The format of the response should be:\n    - A brief opening sentence introducing the books.\n    - For each book, start each book is the title in **bold** followed by the ID in the format 'Title [bookid]' , and then provide a short concise summary of the book.\n    - Each book's summary should start on a new line, indented to make the format cleaner and more readable.\n    **Please ensure that all books in the suggestions list are included in the recommendations without leaving any out.**\n    \n    User input: {user_input}\n    Book suggestions:\n    {suggestions}\n    \"\"\"\n)\n\n","user":"21110906","dateUpdated":"2024-12-07T12:01:20+0700","config":{"colWidth":12,"fontSize":18,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1729948536513_1775326801","id":"20241026-201536_75990200","dateCreated":"2024-10-26T20:15:36+0700","dateStarted":"2024-12-07T12:01:20+0700","dateFinished":"2024-12-07T12:01:20+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:466","errorMessage":""},{"title":"Server chỉ chạy khi mọi thứ đã ổn ","text":"%pyspark\n\napp = Flask(\"My App\")\n\n@app.before_request\ndef handle_preflight():\n    if request.method == \"OPTIONS\":\n        res = Response()\n        res.headers['Access-Control-Allow-Origin'] = '*'\n        res.headers['X-Content-Type-Options'] = '*'\n        res.headers['Access-Control-Allow-Headers'] = '*'\n        return res\n\n@app.route('/transform', methods=['POST'])\ndef transform():\n    data = request.get_json()\n    texts = data.get('texts', [])\n    if not isinstance(texts, list) or not all(isinstance(text, str) for text in texts):\n        return jsonify({'error': 'Invalid input. Expected a list of strings.'}), 400\n    embeddings = model.encode(texts,normalize_embeddings=True)\n    print(embeddings.shape)\n    # embeddings = loaded_adapter(torch.tensor(model.encode(texts))).detach().numpy()\n    return jsonify({'embeddings': embeddings.tolist()})\n\n# @app.route('/extract_img', methods=['POST'])\n# def predict():\n#     if 'image[]' not in request.files:\n#         return jsonify({'error': 'No image provided'}), 400\n\n#     try:\n#         files = request.files.getlist('image[]')\n#         images = []\n#         for file in files:\n#             image = Image.open(io.BytesIO(file.read())).convert(\"RGB\")\n#             images.append(image)\n#         inputs = processor(images=images, return_tensors=\"pt\").to(device)\n#         outputs = img_extraction_model(**inputs)\n#         last_hidden_states = outputs.last_hidden_state\n#         # print(last_hidden_states.detach().cpu().numpy().shape)\n#         # print(last_hidden_states.detach().cpu().numpy()[:,0,:].shape)\n#         # print(last_hidden_states.detach().cpu().numpy()[:,0,:])\n#         result = last_hidden_states.detach().cpu().numpy()[:,0,:].tolist()\n        \n#         return jsonify({'last_hidden_state': result})\n#     except Exception as e:\n#         return jsonify({'error': str(e)}), 500 \n        \n\n@app.route('/home', methods=['GET'])\ndef home():\n    return \"Hello\"\n    \n@app.route('/send_prompt', methods=['POST'])\ndef handle_prompt():\n    data = request.get_json()\n    user_input = data.get('message', '')\n    suggestions = data.get('suggestions', [])\n    \n    suggestions_str = handle_data_book(suggestions)\n    prompt = prompt_template.format(user_input=user_input, suggestions=suggestions_str)\n    print(prompt)\n    \n    def generate():\n        try:\n            for chunk in llm.stream(prompt): \n                #time.sleep(0.1)\n                print(chunk)\n                yield f\"{chunk}\"  \n        except Exception as e:\n            print(\"Error processing LLM model:\", e)\n            yield \"An error occurred while processing the request.\\n\\n\"\n\n    response = Response(generate(), content_type='text/event-stream', headers = {\n        'Access-Control-Allow-Origin': '*',\n        'X-Content-Type-Options': '*',\n        'Access-Control-Allow-Headers': '*'\n    })\n    return response\n    \n@app.route('/log_prompt', methods=['POST'])\ndef savelog():\n    data = request.get_json()\n    user_input = data.get('message', '')\n    suggestions = data.get('suggestions', [])\n    \n    suggestions_data = handle_data_book(suggestions)\n    prompt = prompt_template.format(user_input=user_input, suggestions=suggestions_data)\n    output = llm.invoke(prompt)\n    print(\"Finish prompt\")\n    with open('log_output.csv', mode='a', newline='', encoding='utf-8') as file:\n        writer = csv.writer(file)\n        writer.writerow([suggestions_data, user_input, output])\n    print(\"Save data log\")\n    return {\n        'context': suggestions_data,\n        'query': user_input,\n        'output': output\n    }\napp.run(debug=True, host=\"0.0.0.0\", port=7561, use_reloader=False)","user":"21110906","dateUpdated":"2024-12-07T12:01:20+0700","config":{"colWidth":12,"fontSize":18,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","title":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1728930450037_-269536581","id":"20241015-012730_905283793","dateCreated":"2024-10-15T01:27:30+0700","dateStarted":"2024-12-07T12:01:20+0700","dateFinished":"2024-12-07T11:58:47+0700","status":"RUNNING","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:467","results":{"msg":[{"data":"","type":"TEXT"}]}},{"title":"Test Prompt","text":"%pyspark\n\n\nuser_input = \"I want to improve Python skill\"\nsuggestions = [\n        {\n            \"id\": 76,\n            \"title\": \"Python Programming An Introduction to Computer Science ( PDFDrive )\",\n            \"summary\": \"Python Programming: An Introduction to Computer Science by John Zelle is an excellent book for beginners, introducing fundamental concepts of Python programming and computer science. The book covers not only Python syntax and control structures but also explores concepts like object-oriented programming, algorithms, basic data structures, and problem-solving. Additionally, it includes examples of graphical programming, helping readers understand and apply theories in real-world scenarios.\",\n            \"image\": \"/media/calibre-library-image/John M. Zelle/Python Programming An Introduction t (76)/cover.jpg\",\n            \"author\": \"John M. Zelle\",\n            \"published_date\": \"0101-01-01T00:00:00Z\",\n            \"created_date\": \"2024-08-09T19:42:55.947Z\",\n            \"modified_date\": \"2024-11-27T12:18:56.218Z\",\n            \"summary_similarity\": 0.380096353286721,\n            \"title_similarity\": 0.3298757076263428,\n            \"combined_similarity\": 0.4500101187782121,\n            \"bm25_score\": 13.919523133547825\n        },\n        {\n            \"id\": 37,\n            \"title\": \"Python Data Analytics Data Analysis and Science Using Pandas, matplotlib, and the Python Programming Language ( PDFDrive )\",\n            \"summary\": \"Python Data Analytics: Data Analysis and Science Using Pandas, Matplotlib, and the Python Programming Language is a book focused on teaching data analysis and data science using Python, with particular emphasis on the Pandas and Matplotlib libraries. These two libraries are essential tools for handling and visualizing data, making this book valuable for anyone looking to use Python for practical data analysis tasks. The book covers the following topics: Pandas: A powerful library used for data manipulation and analysis. It includes tools for handling structured data, like tables or spreadsheets, making it easier to clean, organize, and process data. Matplotlib: A plotting library that allows users to create static, animated, and interactive visualizations in Python. The book demonstrates how to use it to graph and visualize complex datasets effectively. Python Programming: For those who are not yet familiar with Python, the book introduces the basics and gradually advances to more complex topics. The examples and exercises help readers understand how to apply Python to real-world data analysis tasks. Data Science: The book also delves into more general data science concepts, such as how to clean data, perform statistical analysis, and interpret data for decision-making.\",\n            \"image\": \"/media/calibre-library-image/Fabio Nelli/Python Data Analytics Data Analysis (37)/cover.jpg\",\n            \"author\": \"Fabio Nelli\",\n            \"published_date\": \"2015-08-20T03:31:40Z\",\n            \"created_date\": \"2024-08-09T19:42:02.663Z\",\n            \"modified_date\": \"2024-11-27T12:18:56.218Z\",\n            \"summary_similarity\": 0.41564927743820157,\n            \"title_similarity\": 0.4204956889152527,\n            \"combined_similarity\": 0.5219848025362775,\n            \"bm25_score\": 12.999399060226125\n        },\n        {\n            \"id\": 77,\n            \"title\": \"Python and Tkinter Programming\",\n            \"summary\": \"This book includes full documentation for Tkinter, and also offers extensive examples for many real-world Python/Tkinter applications that will give programmers a quick start on their own projects.\",\n            \"image\": \"/media/calibre-library-image/John Grayson/Python and Tkinter Programming (77)/cover.jpg\",\n            \"author\": \"John Grayson\",\n            \"published_date\": \"1999-03-01T19:45:07.363Z\",\n            \"created_date\": \"2024-08-09T19:42:56.153Z\",\n            \"modified_date\": \"2024-11-27T12:18:56.218Z\",\n            \"summary_similarity\": 0.44481372833251953,\n            \"title_similarity\": 0.33089373501818553,\n            \"combined_similarity\": 0.4990571637584824,\n            \"bm25_score\": 10.018497804889478\n        },\n        {\n            \"id\": 103,\n            \"title\": \"Hands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems\",\n            \"summary\": \"Through a series of recent breakthroughs, deep learning has boosted the entire field of machine learning. Now, even programmers who know close to nothing about this technology can use simple, efficient tools to implement programs capable of learning from data. This practical book shows you how. Using concrete examples, minimal theory, and two production-ready Python frameworks—scikit-learn and TensorFlow—author Aurélien Géron helps you gain an intuitive understanding of the concepts and tools for building intelligent systems. You’ll learn a range of techniques, starting with simple linear regression and progressing to deep neural networks.\",\n            \"image\": \"/media/calibre-library-image/Aurelien Geron/Hands-On Machine Learning with Scik (103)/cover.jpg\",\n            \"author\": \"Aurélien Géron\",\n            \"published_date\": \"2017-03-12T22:00:00Z\",\n            \"created_date\": \"2024-09-09T12:00:59.645Z\",\n            \"modified_date\": \"2024-11-27T12:18:56.218Z\",\n            \"summary_similarity\": 0.399073374381851,\n            \"title_similarity\": 0.44250903852310863,\n            \"combined_similarity\": 0.5205595500479425,\n            \"bm25_score\": 6.137649794785171\n        },\n        {\n            \"id\": 122,\n            \"title\": \"Visible Learning and the Science of How We Learn\",\n            \"summary\": \"Visible Learning and the Science of How We Learn by John Hattie and Gregory Yates examines the science behind effective teaching and learning strategies. Building on Hattie’s previous research in Visible Learning, which involved a meta-analysis of factors influencing student achievement, this book explores the cognitive science and psychology of how we learn. It provides insights into concepts like memory, motivation, feedback, and problem-solving, showing teachers and educators how to apply these principles to improve learning outcomes. The authors also discuss the impact of different teaching methods, classroom environments, and teacher-student interactions, aiming to make the process of learning more transparent and effective. The book offers evidence-based strategies that educators can use to foster a deeper understanding and improve educational practices.\",\n            \"image\": \"/media/calibre-library-image/Gregory Hattie, John; Yates/Visible Learning and the Science of (122)/cover.jpg\",\n            \"author\": \"Gregory Hattie| John; Yates\",\n            \"published_date\": \"2014-01-02T00:00:00Z\",\n            \"created_date\": \"2024-11-12T00:52:11.798Z\",\n            \"modified_date\": \"2024-11-27T12:18:56.218Z\",\n            \"summary_similarity\": 0.5046560764312744,\n            \"title_similarity\": 0.4790986465870518,\n            \"combined_similarity\": 0.6180413806169818,\n            \"bm25_score\": 4.885859841788541\n        }\n    ]\n\nsuggestions_str = handle_data_book(suggestions)\n#print(suggestions_str)\nprompt = prompt_template.format(user_input=user_input, suggestions=suggestions_str)\n\n# print(prompt)\nllm.invoke(input=prompt)","user":"21110601","dateUpdated":"2024-12-07T03:21:03+0700","config":{"colWidth":12,"fontSize":18,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"'\\n\\nHere are some books you might find interesting based on your input:\\n  [image/cover] **Python Programming An Introduction to Computer Science [76]** , \\n    This book introduces fundamental concepts of Python programming and computer science, covering syntax, control structures, object-oriented programming, data structures, algorithms, and graphical programming. \\n\\n   [image/cover] **Python Data Analytics Data Analysis and Science Using Pandas, matplotlib, and the Python Programming Language [37]** ,\\n     This book focuses on teaching data analysis and data science using Python with emphasis on the Pandas and Matplotlib libraries. It covers Pandas for data manipulation and analysis, Matplotlib for data visualization, Python programming basics, and general data science concepts.\\n\\n   [image/cover] **Python and Tkinter Programming [77]** , \\n      This book provides documentation for Tkinter, a Python GUI toolkit, and includes examples of real-world applications.\\n\\n   [image/cover] **Hands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems [103]** ,\\n     This book teaches you how to build intelligent systems using scikit-learn and TensorFlow, covering concepts like linear regression, deep neural'\n"}]},"apps":[],"jobName":"paragraph_1727722991528_-1020781022","id":"20241001-020311_912960031","dateCreated":"2024-10-01T02:03:11+0700","dateStarted":"2024-12-03T15:58:35+0700","dateFinished":"2024-12-03T16:03:47+0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:468"},{"text":"%pyspark\n","user":"21110601","dateUpdated":"2024-10-29T12:22:16+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1730024236929_-336455432","id":"20241027-171716_1639443454","dateCreated":"2024-10-27T17:17:16+0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:469"}],"name":"server","id":"2K875W6X4","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark::2K875W6X4":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}